apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: purpose-planner-ingress
  namespace: development
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "64m"
spec:
  ingressClassName: nginx
  rules:
  # Frontend routing
  - host: elitessystems.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
  # Backend API routing
  - host: api.elitessystems.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gateway-service
            port:
              number: 3000
---
# Ensure services are ClusterIP for ingress routing
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: development
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: development
  labels:
    app: gateway-service
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: gateway-service